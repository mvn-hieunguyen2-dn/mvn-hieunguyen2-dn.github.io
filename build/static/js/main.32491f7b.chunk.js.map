{"version":3,"sources":["layouts/PublicRoute.jsx","layouts/PublicLayout.jsx","routes.js","App.js","reduces/AppReducer.js","reduces/UserReducer.js","reduces/ExampleReducer.js","reduces/MessengerReducer.js","reduces/NotificationReducer.js","reduces/index.js","store/index.js","index.js","constance/ActionTypes.js","firebase.js","constance/urlPath.js","components/Loading.jsx","actions/UserActions.js"],"names":["PublicRoute","Component","component","Layout","layout","rest","render","props","PublicLayout","children","className","fallback","Loading","loading","LoginContainer","lazy","UserContainer","HomeContainer","StartContainer","SubjectContainer","ExamplesContainer","ExampleContainer","MessengerContainer","MessagesContainer","CommunityContainer","NotificationsContainer","FriendsContainer","TestContainer","NotFound","routes","path","BASE_PATH","exact","HOME_PATH","LOGIN_PATH","USER_PATH","SUBJECT_PATH","EXAMPLES_PATH","MESSENGER_PATH","MESSAGES_PATH","EXAMPLE_PATH","COMMUNITY_PATH","FRIENDS_PATH","NOTIFICATIONS_PATH","connect","state","app","authenticate","userId","snackNotify","dispatch","useDispatch","useEffect","unsubscribeNotifications","onSnapshot","collection","getFS","snapshot","docChanges","forEach","change","type","PUSH_NEW_NOTIFICATION","payload","newNotification","doc","data","q","query","where","orderBy","limit","unsubscribeRooms","snap","roomId","id","e","SEND_MESSAGE_SUCCESS","message","room","unsubscribeUserChanges","friends","push","UPDATE_FRIENDS","renderRoutes","useCallback","result","length","map","route","index","basename","Snackbar","open","on","onClose","setTimeout","OFF_SNACK","TransitionComponent","Slide","direction","initialState","useFirebase","currentUser","loadedAuth","chatRooms","publicUsers","questions","targetTime","windowToken","currentRoom","currentMessages","lastVisible","rooms","lastVisibleRoom","notifications","hasNotifications","combineReducers","WITH_FIREBASE","NOT_WITH_FIREBASE","ADD_USER_TO_APP","ON_SNACK","user","LOGIN_SUCCESS","CLEAR_USER","UPDATE_PROFILE","displayName","photoURL","FETCH_FRIENDS","UNFRIEND","FETCH_PUBLIC_USER","exam","FETCH_EXAM","CLEAR_CURRENT_EXAM","messenger","SEND_MESSAGE","DELETE_MESSAGE","filter","UPDATE_MESSENGER","FETCH_MORE_ROOMS","concat","UPDATE_NEW_ROOM","DELETE_ROOM","UPDATE_CURRENT_ROOM","FETCH_MORE_MESSAGES","messages","unshift","UPDATE_MESSAGES","CLEAR_MESSAGES","notification","FETCH_MORE_NOTIFICATIONS","UPDATE_NOTIFICATION_SUCCESS","sort","a","b","createdAt","UPDATE_NOTIFICATIONS","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","auth","getAuth","getFirestore","getDatabase","getStorage","collectionFS","getDocsFS","getDocs","setDocFS","getDoc","setDoc","docFS","addDoc","addUserToPublic","startAfter","setDataRealTime","onChildAdded","onValue","refer","orderByChild","orderByValue","off","Error","uid","then","res","catch","console","error","addFriendForUser","anotherUser","uploadAvatar","file","username","storage","storageRef","ref","uploadBytes","fileRef","getDownloadURL","getListFiles","filesPath","getFolder","getItems","listRef","items","folders","listAll","itemRef","fullPath","prefixes","folderRef","deleteFile","filePath","desertRef","deleteObject","REFRESH_TOKEN_PATH","SESSION_PATH","FORGOT_PASSWORD_PATH","Fragment","container","spacing","style","marginTop","item","xs","sm","variant","width","paddingTop","loginSuccess","clearUser","logOut","signOut","onAuthStateChanged","loginFirebase","navigator","email","password","signInWithEmailAndPassword","emailVerified","signUpFirebase","fetchSignInMethodsForEmail","createUserWithEmailAndPassword","updateUser","sendEmailVerification","isSignInWithEmailLink","window","location","href","signInWithEmailLink","attributes","updateProfile","updateCurrentUser","getPublicUsers","users","getUserFriends","unFriend","targetUserId","exists","deleteDoc","q2"],"mappings":"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","file":"static/js/main.32491f7b.chunk.js","sourcesContent":["import React from 'react';\nimport { Route} from 'react-router-dom';\n\nconst PublicRoute = ({ component: Component, layout: Layout, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )}\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React, { Suspense } from 'react';\nimport Loading from '../components/Loading';\n\nconst PublicLayout = ({ children }) => {\n  return (\n    <div className=\"main\">\n      <Suspense fallback={<Loading loading={true} className=\"u-text-center\" />}>\n        {children}\n      </Suspense>\n    </div>\n  );\n};\n\nexport default PublicLayout;\n","import { lazy } from 'react';\nimport { HOME_PATH, \n  SUBJECT_PATH, \n  EXAMPLE_PATH, \n  EXAMPLES_PATH, \n  LOGIN_PATH, \n  USER_PATH, \n  BASE_PATH, \n  MESSENGER_PATH, \n  MESSAGES_PATH,\n  COMMUNITY_PATH,\n  NOTIFICATIONS_PATH,\n  FRIENDS_PATH\n } from './constance/urlPath';\nimport PublicLayout from './layouts/PublicLayout'\n\nconst LoginContainer = lazy(() => import('./containers/LoginContainer'));\nconst UserContainer = lazy(() => import('./containers/UserContainer'));\nconst HomeContainer = lazy(() => import('./containers/HomeContainer'));\nconst StartContainer = lazy(() => import('./containers/StartContainer'));\nconst SubjectContainer = lazy(() => import('./containers/SubjectContainer'));\nconst ExamplesContainer = lazy(() => import('./containers/ExamplesContainer'));\nconst ExampleContainer = lazy(() => import('./containers/ExampleContainer'));\nconst MessengerContainer = lazy(() => import('./containers/MessengerContainer'));\nconst MessagesContainer = lazy(() => import('./containers/MessagesContainer'));\nconst CommunityContainer = lazy(() => import('./containers/CommunityContainer'));\nconst NotificationsContainer = lazy(() => import('./containers/NotificationsContainer'));\nconst FriendsContainer = lazy(() => import('./containers/FriendsContainer'));\n\nconst TestContainer = lazy(() => import('./containers/TestContainer'));\n\n\nconst NotFound = lazy(() => import('./containers/NotFound'));\n\n\nexport const routes = [\n  {\n    path: BASE_PATH,\n    component: StartContainer,\n    exact: true,\n    layout: PublicLayout,\n  },\n  {\n    path: HOME_PATH,\n    component: HomeContainer,\n    exact: true,\n    layout: PublicLayout,\n  }\n  ,\n  {\n    path: LOGIN_PATH,\n    component: LoginContainer,\n    exact: true,\n    layout: PublicLayout,\n  },\n  {\n    path: USER_PATH,\n    component: UserContainer,\n    exact: true,\n    layout: PublicLayout,\n  },\n  {\n    path: SUBJECT_PATH,\n    layout: PublicLayout,\n    component: SubjectContainer\n  },\n  {\n    path: EXAMPLES_PATH,\n    layout: PublicLayout,\n    component: ExamplesContainer\n  },\n  {\n    path: MESSENGER_PATH,\n    layout: PublicLayout,\n    component: MessengerContainer\n  },\n  {\n    path: MESSAGES_PATH,\n    layout: PublicLayout,\n    component: MessagesContainer\n  },\n  {\n    path: EXAMPLE_PATH,\n    layout: PublicLayout,\n    component: ExampleContainer\n  },\n  {\n    path: COMMUNITY_PATH,\n    layout: PublicLayout,\n    component: CommunityContainer\n  },\n  {\n    path: FRIENDS_PATH,\n    layout: PublicLayout,\n    component: FriendsContainer\n  },\n  {\n    path: NOTIFICATIONS_PATH,\n    layout: PublicLayout,\n    component: NotificationsContainer\n  },\n  {\n    path: '/test',\n    layout: PublicLayout,\n    component: TestContainer\n  },\n  {\n    path: '*',\n    layout: PublicLayout,\n    component: NotFound\n  }\n];","import React, { useCallback, useEffect } from \"react\";\nimport PublicRoute from \"./layouts/PublicRoute\";\nimport { HashRouter, Switch } from 'react-router-dom';\nimport { routes } from \"./routes\";\nimport { connect } from \"react-redux\";\nimport { authenticate } from './actions/UserActions';\nimport { collection, limit, onSnapshot, orderBy, query, where } from \"firebase/firestore\";\nimport { getFS } from \"./firebase\";\nimport { useDispatch } from 'react-redux';\nimport Snackbar from '@mui/material/Snackbar';\nimport Slide from '@mui/material/Slide';\n\nimport {\n  // UPDATE_NOTIFICATIONS,\n  // UPDATE_NEW_ROOM,\n  SEND_MESSAGE_SUCCESS,\n  OFF_SNACK,\n  UPDATE_FRIENDS,\n  PUSH_NEW_NOTIFICATION\n} from './constance/ActionTypes';\n\nfunction App({ authenticate, userId, snackNotify }) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    authenticate();\n  }, [authenticate])\n\n  useEffect(() => {\n    // subscribe push new notifications\n    const unsubscribeNotifications = onSnapshot(collection(getFS, `notifications/${userId}/messages`), (snapshot) => {\n      snapshot.docChanges().forEach((change) => {\n\n        if (change.type === 'added') {\n          dispatch({ type: PUSH_NEW_NOTIFICATION, payload: { newNotification: change.doc.data() } })\n        }\n      })\n    })\n\n    // subscribe push new message\n    const q = query(collection(getFS, `chats`), where('members', 'array-contains', `${userId}`), orderBy('createdAt', 'desc'), limit(1))\n    const unsubscribeRooms = onSnapshot(q, (snap) => {\n\n\n      snap.docChanges().forEach((change) => {\n        if (change.type === 'added') {\n          let roomId = change.doc.id;\n          onSnapshot(query(collection(getFS, `chats/${roomId}/messages`), orderBy('createdAt', 'desc'), limit(1)), (snap) => {\n            snap.forEach((e) => {\n              dispatch({ type: SEND_MESSAGE_SUCCESS, payload: { message: e.data(), room: roomId } })\n            })\n          })\n        }\n      })\n    })\n\n    // subscribe current user data changes\n\n    // FRIENDS\n    const unsubscribeUserChanges = onSnapshot(collection(getFS, `users/${userId}/friends`), (snap) => {\n      const friends = [];\n      snap.forEach((doc) => {\n        friends.push(doc.data());\n      })\n      dispatch({ type: UPDATE_FRIENDS, payload: { friends } })\n    })\n\n\n\n\n    return () => {\n      unsubscribeRooms();\n      unsubscribeNotifications();\n      unsubscribeUserChanges();\n    }\n\n  }, [dispatch, userId])\n\n  const renderRoutes = useCallback(routes => {\n    let result = null;\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        const { path, exact, layout, component } = route;\n\n        return (\n          <PublicRoute\n            key={index}\n            path={path}\n            exact={exact}\n            layout={layout}\n            component={component}\n          />\n        );\n      });\n    }\n    return <Switch>{result}</Switch>;\n  }, []);\n\n\n  function TransitionUp(props) {\n    return <Slide {...props} direction=\"up\" />;\n  }\n\n  const handleOffSnack = () => {\n    setTimeout(() => dispatch({ type: OFF_SNACK}), 1500)\n  }\n\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        {/* <HeaderContainer /> */}\n        {renderRoutes(routes)}\n      </div>\n      <Snackbar\n        open={snackNotify?.on && snackNotify?.message ? true : false}\n        onClose={handleOffSnack}\n        TransitionComponent={TransitionUp}\n        message={snackNotify?.message}\n        key={'up'}\n      />\n    </HashRouter>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    ...state.app,\n  };\n};\n\n\nexport default connect(mapStateToProps, { authenticate })(App);\n","import {\n  WITH_FIREBASE, NOT_WITH_FIREBASE,\n  ADD_USER_TO_APP,\n  ON_SNACK,\n  OFF_SNACK\n} from '../constance/ActionTypes';\n\nconst initialState = {\n  useFirebase: false,\n  userId: null,\n  snackNotify: {\n    on: false,\n    message: null\n  }\n}\n\nexport default function app(state = initialState, { type, payload }) {\n\n  switch (type) {\n\n    case WITH_FIREBASE:\n      return {\n        ...state,\n        useFirebase: true\n      }\n    case NOT_WITH_FIREBASE:\n      return {\n        ...state,\n        useFirebase: false\n      }\n    case ADD_USER_TO_APP:\n      return {\n        ...state,\n        userId: payload.userId\n      }\n\n    case ON_SNACK:\n      return {\n        ...state,\n        snackNotify: {\n          ...state.snackNotify,\n          on: true,\n          message: payload?.message\n        }\n      }\n    case OFF_SNACK:\n      return {\n        ...state,\n        snackNotify: {\n          ...state.snackNotify,\n          on: false,\n          message: null\n        }\n      }\n    default:\n      return state;\n  }\n\n}","import {\n  LOGIN_SUCCESS,\n  CLEAR_USER,\n  UPDATE_PROFILE,\n  FETCH_FRIENDS,\n  FETCH_PUBLIC_USER,\n  UPDATE_FRIENDS,\n  UNFRIEND\n} from '../constance/ActionTypes';\n\nconst initialState = {\n  currentUser: null,\n  loadedAuth: false,\n  friends: [],\n  chatRooms: [],\n  publicUsers: []\n};\n\nexport default function user(state = initialState, { type, payload }) {\n  switch (type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        currentUser: payload.user,\n        loadedAuth: true\n      };\n    case CLEAR_USER:\n      return {\n        ...initialState,\n        loadedAuth: true\n      };\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        currentUser: { ...state.currentUser, displayName: payload?.displayName, photoURL: payload?.photoURL }\n      };\n      case UPDATE_FRIENDS:\n        return {\n          ...state,\n          friends: payload.friends\n        }\n    case FETCH_FRIENDS:\n      return {\n        ...state,\n        friends: payload.friends\n      }\n      case UNFRIEND:\n        return {\n          ...state,\n          // friends: state.friends.filter((f) => f.uid !== payload.removedId)\n        }\n      case FETCH_PUBLIC_USER:\n        return {\n          ...state,\n          publicUsers: payload.publicUsers\n        }\n    default:\n      return state;\n  }\n}\n","import { FETCH_EXAM, CLEAR_CURRENT_EXAM } from \"../constance/ActionTypes\";\n\n\n\n\nconst initialState = {\n  questions: [],\n  targetTime: 0,\n  windowToken: ''\n}\n\nexport default function exam(state = initialState, { type, payload }) {\n  switch (type) {\n    case FETCH_EXAM:\n      return {\n        ...state,\n        questions: payload.questions,\n        targetTime: payload.targetTime,\n        windowToken: payload.windowToken\n      }\n    case CLEAR_CURRENT_EXAM:\n      return state;\n    default:\n      return state;\n  }\n}","import {\n  DELETE_MESSAGE,\n  CLEAR_MESSAGES,\n  SEND_MESSAGE,\n  UPDATE_MESSENGER,\n  FETCH_MORE_MESSAGES,\n  SEND_MESSAGE_SUCCESS,\n  UPDATE_MESSAGES,\n  UPDATE_CURRENT_ROOM,\n  FETCH_MORE_ROOMS,\n  UPDATE_NEW_ROOM,\n  DELETE_ROOM\n} from '../constance/ActionTypes';\n\nconst initialState = {\n  currentRoom: null,\n  currentMessages: [],\n  lastVisible: null,\n  rooms: [],\n  lastVisibleRoom: null\n}\n\nexport default function messenger(state = initialState, { type, payload }) {\n  switch (type) {\n\n    case SEND_MESSAGE:\n      return {\n        ...state,\n        currentMessages: [...state.currentMessages, payload.message]\n      }\n    case DELETE_MESSAGE:\n      return {\n        ...state,\n        currentMessages: state.currentMessages.filter((e) => e.message !== payload.message)\n      }\n    case UPDATE_MESSENGER:\n      return {\n        ...state,\n        rooms: payload?.rooms,\n      }\n    case FETCH_MORE_ROOMS:\n      return {\n        ...state,\n        rooms: state.rooms.concat(payload?.rooms),\n        lastVisibleRoom: payload.lastVisible\n      }\n    case UPDATE_NEW_ROOM:\n      return {\n        ...state,\n        rooms: state.rooms.push(payload?.room)\n      }\n    case DELETE_ROOM:\n      return {\n        ...state,\n        rooms: state.rooms.filter((e) => e.roomId !== payload?.roomId)\n      }\n    case UPDATE_CURRENT_ROOM:\n      return {\n        ...state,\n        currentRoom: payload?.currentRoom\n      }\n    case FETCH_MORE_MESSAGES:\n      return {\n        ...state,\n        currentMessages: payload.messages,\n        lastVisible: payload?.lastVisible\n      }\n    case SEND_MESSAGE_SUCCESS:\n      if (payload?.room === state.currentRoom?.roomId) {\n        state.currentMessages.unshift(payload.message);\n      }\n      return {\n        ...state,\n        currentMessages: [...state.currentMessages]\n      }\n    case UPDATE_MESSAGES:\n      return {\n        ...state,\n        currentMessages: payload.messages,\n        lastVisible: payload?.lastVisible\n      }\n    case CLEAR_MESSAGES:\n      return {\n        ...state,\n        currentMessages: [],\n        lastVisible: null\n      }\n    default:\n      return state;\n  }\n\n\n}","import {\n  FETCH_MORE_NOTIFICATIONS,\n  UPDATE_NOTIFICATION_SUCCESS,\n  PUSH_NEW_NOTIFICATION,\n  UPDATE_NOTIFICATIONS\n} from '../constance/ActionTypes';\n\nconst initialState = {\n  notifications: [],\n  lastVisible: null,\n  hasNotifications: false\n}\n\nexport default function notifications(state = initialState, { type, payload }) {\n\n  switch (type) {\n\n    case FETCH_MORE_NOTIFICATIONS:\n      return {\n        ...state,\n        notifications: payload.notifications,\n        lastVisible: payload.lastVisible\n      }\n    case PUSH_NEW_NOTIFICATION:\n      state.notifications.push(payload.newNotification);\n      return {\n        ...state,\n        notifications: [...state.notifications],\n        hasNotifications: true\n      }\n    case UPDATE_NOTIFICATION_SUCCESS:\n      return {\n        ...state,\n        notifications: state.notifications.filter((e) => e?.id !== payload.notification?.id).concat(payload.notification)\n          .sort((a, b) => a?.createdAt - b?.createdAt)\n        ,\n      }\n      case UPDATE_NOTIFICATIONS:\n        return {\n          ...state,\n          notifications: payload.notifications,\n          lastVisible: payload.lastVisible\n        }\n    default:\n      return state\n  }\n\n}","import { combineReducers } from 'redux';\n// import GamesReducer from './GamesReducer';\n// import RouterReducer from './RouterReducer';\nimport AppReducer from './AppReducer';\nimport UserReducer from './UserReducer';\nimport ExampleReducer from './ExampleReducer';\nimport MessengerReducer from './MessengerReducer';\nimport NotificationReducer from './NotificationReducer';\n\n\n// import profileReducer from './ProfileReducer';\n\nexport default combineReducers({\n  // games: GamesReducer,\n  // router: RouterReducer,\n  app: AppReducer,\n  user: UserReducer,\n  exam: ExampleReducer,\n  messenger: MessengerReducer,\n  notification: NotificationReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reduces';\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// USER\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const CLEAR_USER = 'CLEAR_USER';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const FETCH_EXAM = 'FETCH_EXAM';\nexport const CLEAR_CURRENT_EXAM = 'CLEAR_CURRENT_EXAM';\nexport const FETCH_FRIENDS = 'FETCH_FRIENDS';\nexport const FETCH_PUBLIC_USER = 'FETCH_PUBLIC_USER';\n\n//App\n\nexport const ADD_USER_TO_APP = 'ADD_USER_TO_APP';\nexport const UPDATE_NOTIFICATIONS = 'UPDATE_NOTIFICATIONS';\n\n\nexport const WITH_FIREBASE = 'WITH_FIREBASE';\nexport const NOT_WITH_FIREBASE = 'NOT_WITH_FIREBASE';\n\n\n//messenger \nexport const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE';\nexport const CLEAR_MESSAGES = 'CLEAR_MESSAGES';\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\nexport const UPDATE_MESSENGER = 'UPDATE_MESSENGER';\nexport const FETCH_MORE_MESSAGES = 'FETCH_MORE_MESSAGES';\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS';\nexport const UPDATE_MESSAGES = 'UPDATE_MESSAGES';\nexport const UPDATE_CURRENT_ROOM = 'UPDATE_CURRENT_ROOM';\nexport const FETCH_MORE_ROOMS = 'FETCH_MORE_ROOMS';\nexport const UPDATE_NEW_ROOM = 'UPDATE_NEW_ROOM';\nexport const FETCH_MORE_NOTIFICATIONS = 'FETCH_MORE_NOTIFICATIONS';\nexport const UPDATE_NOTIFICATION_SUCCESS = 'UPDATE_NOTIFICATION_SUCCESS';\nexport const PUSH_NEW_NOTIFICATION = 'PUSH_NEW_NOTIFICATION';\nexport const DELETE_ROOM = 'DELETE_ROOM';\n\nexport const UPDATE_FRIENDS = 'UPDATE_FRIENDS';\nexport const UNFRIEND = 'UNFRIEND';\nexport const ADD_FRIEND = 'ADD_FRIEND';\n\nexport const OFF_SNACK = 'OFF_SNACK';\nexport const ON_SNACK = 'OFF_SNACK'\n","import '@firebase/firestore';\nimport '@firebase/auth';\nimport '@firebase/storage';\nimport { initializeApp } from \"firebase/app\"\nimport {\n  getAuth\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n  getDoc,\n  doc,\n  setDoc,\n  onSnapshot,\n  addDoc,\n  query,\n  orderBy,\n  limit,\n  startAfter\n} from \"firebase/firestore\";\n\nimport {\n  getStorage,\n  ref,\n  uploadBytes,\n  listAll,\n  deleteObject,\n  getDownloadURL,\n  uploadBytesResumable\n} from 'firebase/storage'\n\nimport {\n  getDatabase,\n  ref as refer,\n  set as setDataRealTime,\n  // query,\n  onChildAdded,\n  onValue,\n  orderByChild,\n  orderByValue,\n  off,\n  push\n} from 'firebase/database'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBIbeF53YGcJpeiRJJNs_nUDXii7uXa-GY\",\n  authDomain: \"edustation-da140.firebaseapp.com\",\n  projectId: \"edustation-da140\",\n  storageBucket: \"edustation-da140.appspot.com\",\n  messagingSenderId: \"969384639109\",\n  appId: \"1:969384639109:web:cc8ce7dec4f973fdf0c7ec\",\n  // measurementId: \"${config.measurementId}\",\n  databaseURL: \"https://edustation-da140-default-rtdb.asia-southeast1.firebasedatabase.app/\",\n  // host: 'firebaseapp.com',\n  // value: 'google-site-verification=N6T-ae-FHVgsFXmXIIL5ZKf-NFz3rz9Zpx8dGh3Eyjg'  \n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);\nexport const auth = getAuth(firebaseApp);\nexport const db = getFirestore(firebaseApp);\nexport const realtime = getDatabase(firebaseApp);\nexport const storage = getStorage(firebaseApp);\n\n// FIRE STORE EXPORT\nexport const getFS = getFirestore(firebaseApp);\nexport const collectionFS = collection;\nexport const getDocsFS = getDocs;\nexport const getDocFS = getDoc;\nexport const setDocFS = setDoc;\nexport const addDocFS = addDoc;\nexport const docFS = doc;\nexport const onSnapshotFS = onSnapshot;\nexport const queryFS = query;\nexport const orderByFS = orderBy;\nexport const limitFS = limit;\nexport const startAfterFS = startAfter;\n\n\n\n\n// REALTIME DATABASE EXPORT\nexport const realtimeDB = getDatabase(firebaseApp);\nexport const setRealTime = setDataRealTime;\nexport const onAddChild = onChildAdded;\nexport const onValueObserver = onValue;\nexport const referentDB = refer;\nexport const queryDB = query;\nexport const orderByChildDB = orderByChild;\nexport const orderByValueDB = orderByValue;\nexport const offDBQuery = off;\nexport const pushData = push;\n\n\nexport const addUserToPublic = (currentUser) => {\n  if (!currentUser.photoURL && !currentUser.displayName) {\n    throw new Error(\"Please update your information before do this action.\")\n  } else {\n    setDocFS(docFS(getFS, 'public/IN4/UIDs', `${currentUser.uid}`), {\n      displayName: currentUser.displayName,\n      photoURL: currentUser.photoURL,\n      uid: currentUser.uid\n    }).then(res => {\n\n    }).catch((e) => console.error(\"Fails to public this user\"))\n  }\n}\n\nexport const addFriendForUser = (currentUser, anotherUser) => {\n  if (!currentUser || !anotherUser) return;\n  const friends = [];\n  getDocsFS(collectionFS(getFS, `users/${currentUser.uid}/friends`))\n    .then(res => {\n      res.forEach(e => friends.push(e.data()));\n      setDocFS(docFS(getFS, `users/${currentUser.uid}/friends`, `${friends.length + 1}`), {\n        displayName: anotherUser.displayName,\n        photoURL: anotherUser.photoURL,\n        uid: anotherUser.uid\n      }\n      )\n        .catch(e => console.error(e.message))\n    })\n    .catch((e) => console.error(e.message))\n  getDocsFS(collectionFS(getFS, `users/${anotherUser.uid}/friends`))\n    .then(res => {\n      res.forEach(e => friends.push(e.data()));\n      setDocFS(docFS(getFS, `users/${anotherUser.uid}/friends`, `${friends.length + 1}`), {\n        displayName: currentUser.displayName,\n        photoURL: currentUser.photoURL,\n        uid: currentUser.uid\n      }\n      )\n        .catch(e => console.error(e.message))\n    })\n    .catch((e) => console.error(e.message))\n}\n\n\n// STORAGE\nexport const uploadAndGetFullPath = async (fileData, folder, fileName) => {\n  const storage = getStorage();\n  const storageRef = ref(storage, `${folder}/${fileName}`);\n\n  const uploadTask = uploadBytesResumable(storageRef, fileData);\n\n  uploadTask.on('state_changed',\n    (snapshot) => {\n      const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n      console.log('Upload is ' + progress + '% done');\n      switch (snapshot.state) {\n        case 'paused':\n          console.log('Upload is paused');\n          break;\n        case 'running':\n          console.log('Upload is running');\n          break;\n        default:\n          console.log(\"Somethings wrong?\")\n      }\n    },\n    (error) => {\n      console.error(\"Upload process failure.\")\n    },\n    () => {\n      getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n        console.log('File available at', downloadURL);\n      });\n    }\n\n  );\n}\n\nexport const uploadAvatar = async (file, username) => {\n  const storage = getStorage();\n  const storageRef = ref(storage, `avatars/${username}`);\n  const fileRef = await uploadBytes(storageRef, file);\n  return await getDownloadURL(fileRef.ref);\n\n}\n\nexport const uploadFileBlob = (fileData, folder, fileName) => {\n  const storage = getStorage();\n  const filesPath = `${folder}`;\n  const storageRef = ref(storage, `${folder}/${fileName}`);\n\n  // check uniq file\n  const listRef = ref(storage, filesPath);\n  const items = [];\n  let uniqFileName = true;\n  listAll(listRef)\n    .then(res => {\n      res.items.forEach((itemRef) => {\n        // All the items under listRef.\n        items.push(itemRef);\n      });\n    }).then(\n      () => {\n        items.forEach(e => {\n          let arr = String(e).split(\"/\");\n          if (arr.filter(e => e === fileName).length > 0) {\n            uniqFileName = false;\n          }\n        })\n      }\n    ).then(() => {\n      if (!uniqFileName) {\n        throw new Error(\"File name is exists!\")\n      } else {\n        uploadBytes(storageRef, fileData).then((snapshot) => {\n          getDownloadURL(snapshot.ref).then((downloadURL) => {\n            console.log('File available at', downloadURL);\n          });\n          console.log('Uploaded a blob or file!');\n        });\n      }\n    }).catch(e => console.error(\"You don't have permission for this action.\"))\n\n}\n\nexport const getListFiles = async (filesPath, getFolder, getItems) => {\n  const storage = getStorage();\n  const listRef = ref(storage, filesPath);\n  const items = [];\n  const folders = [];\n  const res = await listAll(listRef);\n\n  if (getItems) {\n    res.items.forEach((itemRef) => {\n      // All the items under listRef.\n      items.push(itemRef.fullPath);\n    });\n\n  }\n  if (getFolder) {\n    res.prefixes.forEach((folderRef) => {\n      folders.push(folderRef.fullPath);\n    })\n  }\n  if (getFolder) return folders;\n  if (getItems) return items;\n}\n\nexport const deleteFile = async (filePath) => {\n  const storage = getStorage();\n  const desertRef = ref(storage, filePath);\n\n  return await deleteObject(desertRef);\n}\n\n// download file\nexport const downloadFile = async (fileName) => {\n  const storage = getStorage();\n  // let urlPath = \"\";\n  return await getDownloadURL(ref(storage, fileName))\n  // .then((url) => {\n\n  //   const xhr = new XMLHttpRequest();\n  //   xhr.responseType = 'blob';\n  //   xhr.onload = (event) => {\n  //     // const blob = xhr.response;\n  //     // console.log(\"blob\", blob)\n  //   };\n  //   xhr.open('GET', url);\n  //   xhr.send();\n\n  //   // download\n  //   urlPath = url;\n  //   // const link = document.createElement(\"a\");\n  //   // link.href = url;\n  //   // link.download = fileName;\n  //   // link.style.display = \"none\";\n  //   // link.click();\n  // })\n  // .then(() => {\n  //   return urlPath;\n  // })\n  // .catch((error) => {\n\n  //   switch (error.code) {\n  //     case 'storage/object-not-found':\n  //       console.error(\"Fail to find this file.\")\n  //       break;\n  //     case 'storage/unauthorized':\n  //       console.error(\"No permission for this action\")\n  //       break;\n  //     case 'storage/canceled':\n  //       console.error(\"Canceled by user\")\n  //       break;\n\n  //     // ...\n  //     case 'storage/unknown':\n  //       console.log(\"Something unknown\")\n  //       break;\n  //     default:\n\n  //   }\n  // });\n}\n\n\n\n\n","export const REFRESH_TOKEN_PATH = \"/refreshToken\";\nexport const SESSION_PATH = \"/sessions\";\nexport const BASE_PATH = \"/\";\nexport const HOME_PATH = \"/home\";\nexport const LOGIN_PATH = \"/login\";\nexport const SIGN_UP_PATH = \"/register\";\n\nexport const FORGOT_PASSWORD_PATH = \"/forgotPassword\";\nexport const REGISTER_PATH = \"/register\";\nexport const USER_PATH = \"/user\";\n\nexport const SUBJECT_PATH = \"/subject/:name\";\nexport const EXAMPLES_PATH = \"/examples/:name\";\nexport const EXAMPLE_PATH = \"/example/:id\";\n\n//messenger\nexport const MESSENGER_PATH = \"/messenger\";\nexport const MESSAGES_PATH = '/messages/:id'\nexport const COMMUNITY_PATH = '/community';\nexport const NOTIFICATIONS_PATH = '/notifications';\n\nexport const FRIENDS_PATH = '/friends'\n","import React from 'react';\nimport Skeleton from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\n\nconst Loading = () => {\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={1} style={{marginTop: 1}}>\n        <Grid item xs={12} sm={3} >\n          <Skeleton variant=\"rect\" width=\"100%\">\n            <div style={{ paddingTop: '20%' }} />\n          </Skeleton>\n          <Skeleton variant=\"rect\" width=\"100%\">\n            <div style={{ paddingTop: '20%' }} />\n          </Skeleton>\n        </Grid>\n        <Grid item xs={12} sm={9}>\n          <Skeleton variant=\"rect\" width=\"100%\">\n            <div style={{ paddingTop: '30%' }} />\n          </Skeleton>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport default Loading\n","import {\n  LOGIN_SUCCESS,\n  CLEAR_USER,\n  UPDATE_PROFILE,\n  FETCH_FRIENDS,\n  FETCH_PUBLIC_USER,\n  ADD_USER_TO_APP,\n  UNFRIEND,\n  ON_SNACK\n} from '../constance/ActionTypes';\nimport { BASE_PATH } from '../constance/urlPath';\nimport {\n  auth,\n  getFS,\n  // firebaseApp\n} from '../firebase';\nimport { collection, deleteDoc, getDocs, query, where } from 'firebase/firestore';\n\nimport {\n  signInWithEmailAndPassword,\n  isSignInWithEmailLink,\n  signInWithEmailLink,\n  sendEmailVerification,\n  fetchSignInMethodsForEmail,\n  createUserWithEmailAndPassword,\n  updateProfile\n} from \"firebase/auth\";\n\nconst loginSuccess = user => ({ type: LOGIN_SUCCESS, payload: { user } });\nconst clearUser = () => ({ type: CLEAR_USER });\nconst addUserIdToApp = userId => ({ type: ADD_USER_TO_APP, payload: { userId } })\n\nexport const logOut = () => async dispatch => {\n  await auth.signOut();\n  dispatch(clearUser());\n};\n\nexport const authenticate = () => async (dispatch) => {\n  return auth.onAuthStateChanged(user => {\n    if (user) {\n      dispatch(loginSuccess(user));\n      dispatch(addUserIdToApp(user?.uid))\n    } else {\n      dispatch(clearUser());\n    }\n  })\n};\n\nexport const loginFirebase = (navigator, email, password) => dispatch => {\n  let user = null;\n  return signInWithEmailAndPassword(auth, email, password)\n    .then((res) => {\n      if (res?.user) {\n        user = res?.user;\n\n        if (user?.emailVerified === true) {\n          dispatch(loginSuccess(user));\n          navigator?.push(BASE_PATH);\n        } else {\n          dispatch({ type: ON_SNACK, payload: { message: \"This account hasn't still verify. Please check your email.\", on: true } })\n        }\n      } else {\n        dispatch(clearUser());\n      }\n    })\n}\n\n\n\nexport const signUpFirebase = (navigator, username, email, password) => async dispatch => {\n\n  \n\n\n  // check mail taken\n  const res = await fetchSignInMethodsForEmail(auth, email)\n  if (res && res.length > 0) {\n    throw new Error(\"This email has already taken.\");\n  }\n\n  //check username taken\n\n  return createUserWithEmailAndPassword(auth, email, password)\n    .then((res) => {\n      const user = res?.user;\n      updateUser({ displayName: username })\n        .then(() => {\n\n          \n\n          sendEmailVerification(user)\n            .then(() => {\n              dispatch({ type: ON_SNACK, payload: { message: \"Please check mail and verify is you before sign in.\", on: true } })\n              if (isSignInWithEmailLink(auth, window.location.href)) {\n\n                // The client SDK will parse the code from the link for you.\n                signInWithEmailLink(auth, email, window.location.href)\n                  .then((res) => {\n                    if (res?.user){\n                      dispatch(loginSuccess(user));\n                      navigator?.push(BASE_PATH);\n                    }else {\n\n                    }\n                  })\n              }\n            })\n\n        })\n    })\n}\n\nexport const updateUser = (attributes) => {\n  const { currentUser } = auth;\n  if (currentUser) {\n    return updateProfile(currentUser, { ...attributes })\n  } else {\n    return \"User not available.\"\n  }\n}\n\nexport const updateCurrentUser = (attributes) => async dispatch => {\n  try {\n    updateUser({ ...attributes });\n    dispatch({ type: UPDATE_PROFILE, payload: { photoURL: attributes?.photoURL, displayName: attributes?.displayName } })\n  } catch (e) {\n    throw new Error(\"Ops. Can not update your information.\")\n  }\n}\n\n// PEOPLE\n\nexport const getPublicUsers = () => dispatch => {\n  let users = [];\n  getDocs(collection(getFS, `public/IN4/UIDs`))\n    .then((res) => res.forEach((e) => users.push(e.data())))\n    .then(() => dispatch({ type: FETCH_PUBLIC_USER, payload: { publicUsers: users } }))\n    .catch((e) => console.error(e.messages));\n\n}\n\nexport const getUserFriends = (currentUser) => dispatch => {\n  // get friends of user\n  const friends = [];\n\n  getDocs(collection(getFS, `users/${currentUser?.uid}/friends`))\n    .then(res => {\n      res.forEach(e => {\n        friends.push(e.data())\n      });\n    })\n    .then(() => {\n      dispatch({ type: FETCH_FRIENDS, payload: { friends: friends } })\n    })\n\n    .catch(e => console.error(e.messages))\n\n}\n\nexport const unFriend = (currentUser, targetUserId) => dispatch => {\n\n  const q = query(collection(getFS, `users/${currentUser?.uid}/friends`), where('uid', '==', targetUserId))\n\n  getDocs(q)\n    .then((res) => {\n      res.forEach((e) => {\n        if (e.exists()) {\n          deleteDoc(e.ref)\n            .then(() => {\n              const q2 = query(collection(getFS, `users/${targetUserId}/friends`), where('uid', '==', currentUser?.uid))\n              getDocs(q2)\n                .then((res) => {\n                  res.forEach((e) => {\n                    if (e.exists()) {\n                      deleteDoc(e.ref)\n                        .then(() => {\n                          dispatch({ type: UNFRIEND })\n                        })\n                    }\n                  })\n                })\n            })\n        }\n      })\n    })\n\n\n}\n\n\n\n\n\n\n\n"],"sourceRoot":""}